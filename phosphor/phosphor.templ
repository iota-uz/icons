package phosphor

templ PhosphorLogo(props Props) {
	@svg(props) {
		if props.Variant == Filled {
			<rect width="256" height="256" fill="none"></rect><path d="M152,32H72a8,8,0,0,0-8,8V168a80.09,80.09,0,0,0,80,80,8,8,0,0,0,8-8V176a72,72,0,0,0,0-144ZM136,231.5A64.14,64.14,0,0,1,80.51,176H136Zm0-94L85.68,48H136ZM152,160V48a56,56,0,0,1,0,112Z"></path>
		} else if props.Variant == DuoTone {
			<rect width="256" height="256" fill="none"></rect><path d="M144,168h8a64,64,0,0,0,0-128h-8Z" opacity="0.2"></path><polygon points="144 168 72 168 72 40 144 168" opacity="0.2"></polygon><rect x="72" y="40" width="72" height="128" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></rect><path d="M144,168v72a72,72,0,0,1-72-72" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></path><line x1="72" y1="40" x2="144" y2="168" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></line><path d="M144,168h8a64,64,0,0,0,0-128h-8" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></path>
		} else if props.Variant == Bold {
			<rect width="256" height="256" fill="none"></rect><rect x="72" y="40" width="72" height="128" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="24"></rect><path d="M144,168v72a72,72,0,0,1-72-72" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="24"></path><line x1="72" y1="40" x2="144" y2="168" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="24"></line><path d="M144,168h8a64,64,0,0,0,0-128h-8" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="24"></path>
		} else if props.Variant == Thin {
			<rect width="256" height="256" fill="none"></rect><rect x="72" y="40" width="72" height="128" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"></rect><path d="M144,168v72a72,72,0,0,1-72-72" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"></path><line x1="72" y1="40" x2="144" y2="168" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"></line><path d="M144,168h8a64,64,0,0,0,0-128h-8" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"></path>
		} else if props.Variant == Light {
			<rect width="256" height="256" fill="none"></rect><rect x="72" y="40" width="72" height="128" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="12"></rect><path d="M144,168v72a72,72,0,0,1-72-72" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="12"></path><line x1="72" y1="40" x2="144" y2="168" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="12"></line><path d="M144,168h8a64,64,0,0,0,0-128h-8" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="12"></path>
		} else {
			<rect width="256" height="256" fill="none"></rect><rect x="72" y="40" width="72" height="128" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></rect><path d="M144,168v72a72,72,0,0,1-72-72" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></path><line x1="72" y1="40" x2="144" y2="168" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></line><path d="M144,168h8a64,64,0,0,0,0-128h-8" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></path>
		}
	}
}
